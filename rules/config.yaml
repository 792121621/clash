proxy-providers:
  mitce-sub:
    type: http
    url: ""
    interval: 604800  # 每周更新一次（秒）
    
    
    
    
pr: &pr { type: select, proxies: [🚀 默认代理, ♻️ 自动选择, ♻️🌏 亚洲自动, ♻️🇭🇰 HK, ♻️🇯🇵 JP, ♻️🇰🇷 KR, ♻️🇹🇼 TW, ♻️🇸🇬 SG, ♻️🌎 北美洲自动, ♻️🌍 欧洲自动, ♻️🌏 大洋洲自动, ♻️🌏 其他自动, ♻️ 非香港自动, ♻️ 非日韩自动, ♻️ CF自动, 
     🔯 故障转移, 🔯🌏 亚洲故转, 🔯🇭🇰 HK, 🔯🇯🇵 JP, 🔯🇰🇷 KR, 🔯🇹🇼 TW, 🔯🇸🇬 SG, 🔯🌎 北美洲故转, 🔯🌍 欧洲故转, 🔯🌏 大洋洲故转, 🔯🌏 其他故转, 🔯 非香港故转, 🔯 非日韩故转, 🔯 CF故转,
     🔮 负载均衡, 🔮 CF均衡] }
url_test_common1: &url_test_common1 { type: url-test, interval: 180, tolerance: 150, lazy: true, include-all: true }
url_test_common2: &url_test_common2 { type: url-test, interval: 180, tolerance: 150, lazy: true, include-all: true }
fallback_common1: &fallback_common1 { type: fallback, interval: 180, connect-timeout: 2000, tolerance: 150, lazy: true, include-all: true }
fallback_common2: &fallback_common2 { type: fallback, interval: 180, connect-timeout: 2000, tolerance: 150, lazy: true, include-all: true }
load-balance: &load-balance { type: load-balance, strategy: consistent-hashing, interval: 180, connect-timeout: 2000, tolerance: 150, lazy: true, include-all: true }
proxy-groups:
  -  {name: 🚀 默认代理, type: select, include-all: true, proxies: [♻️ 自动选择, ♻️🌏 亚洲自动, ♻️🇭🇰 HK, ♻️🇯🇵 JP, ♻️🇰🇷 KR, ♻️🇹🇼 TW, ♻️🇸🇬 SG, ♻️🌎 北美洲自动, ♻️🌍 欧洲自动, ♻️🌏 大洋洲自动, ♻️🌏 其他自动, ♻️ CF自动, 
     🔯 故障转移, 🔯🌏 亚洲故转, 🔯🇭🇰 HK, 🔯🇯🇵 JP, 🔯🇰🇷 KR, 🔯🇹🇼 TW, 🔯🇸🇬 SG, 🔯🌎 北美洲故转, 🔯🌍 欧洲故转, 🔯🌏 大洋洲故转, 🔯🌏 其他故转, 🔯 CF故转,
     🔮 负载均衡, 🔮 CF均衡], 
     exclude-filter: "^(..1) .*? (Domain)" }
     
  - { name: 📹 YouTube, <<: *pr}
  - { name: 🎵 TikTok, <<: *pr, }
  - { name: 🤖 AI, <<: *pr, }
  - { name: 📚 18comic, <<: *pr, }
  - { name: ☁ Cloudflare, <<: *pr, } #icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/Cloudflare.png
  - { name: 🛑 广告拦截, type: select, proxies: [REJECT, DIRECT] }
  - { name: 🎯 国内流量, type: select, proxies: [DIRECT, REJECT, 🚀 默认代理] }
  - { name: 🐟 漏网之鱼, type: select, proxies: [DIRECT, REJECT, 🚀 默认代理] }




  - { name: ♻️ 自动选择, <<: *url_test_common1, exclude-filter: "(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  # 大洲节点组
  - { name: ♻️🌏 亚洲自动, <<: *url_test_common1, filter: "港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|KR|Korea|KOR|首尔|韩|韓|台|新北|彰化|TW|Taiwan|新加坡|坡|狮城|SG|Singapore" }
  # 国家节点组
  - { name: ♻️🇭🇰 HK, <<: *url_test_common2, filter: "港|HK|hk|Hong Kong|HongKong|hongkong" }
  - { name: ♻️🇯🇵 JP, <<: *url_test_common2, filter: "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan" }
  - { name: ♻️🇰🇷 KR, <<: *url_test_common2, filter: "KR|Korea|KOR|首尔|韩|韓" }
  - { name: ♻️🇹🇼 TW, <<: *url_test_common2, filter: "台|新北|彰化|TW|Taiwan" }
  - { name: ♻️🇸🇬 SG, <<: *url_test_common2, filter: "新加坡|坡|狮城|SG|Singapore" }
  # 大洲节点组
  - { name: ♻️🌎 北美洲自动, <<: *url_test_common1, filter: "美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|加拿大|多伦多|温哥华|蒙特利尔|CA|Canada" }
  # 国家节点组
  # - { name: ♻️🇺🇲 US, <<: *url_test_common2, filter: "美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States" }
  # - { name: ♻️🇨🇦 CA, <<: *url_test_common2, filter: "加拿大|多伦多|温哥华|蒙特利尔|CA|Canada" }
  # 大洲节点组
  - { name: ♻️🌍 欧洲自动, <<: *url_test_common1, filter: "英国|伦敦|UK|United Kingdom|Britain|England|德国|法兰克福|慕尼黑|柏林|DE|Germany|法国|巴黎|FR|France|荷兰|阿姆斯特丹|NL|Netherlands|俄罗斯|莫斯科|圣彼得堡|RU|Russia" }
  # 国家节点组
  # - { name: ♻️🇬🇧 UK, <<: *url_test_common2, filter: "英国|伦敦|UK|United Kingdom|Britain|England" }
  # - { name: ♻️🇩🇪 DE, <<: *url_test_common2, filter: "德国|法兰克福|慕尼黑|柏林|DE|Germany" }
  # - { name: ♻️🇫🇷 FR, <<: *url_test_common2, filter: "法国|巴黎|FR|France" }
  # - { name: ♻️🇳🇱 NL, <<: *url_test_common2, filter: "荷兰|阿姆斯特丹|NL|Netherlands" }
  # - { name: ♻️🇷🇺 RU, <<: *url_test_common2, filter: "俄罗斯|莫斯科|圣彼得堡|RU|Russia" }
  # 大洲节点组
  - { name: ♻️🌏 大洋洲自动, <<: *url_test_common1, filter: "澳大利亚|悉尼|墨尔本|AU|Australia" }
  # 国家节点组
  # - { name: ♻️🇦🇺 AU, <<: *url_test_common2, filter: "澳大利亚|悉尼|墨尔本|AU|Australia" }
  # 其他节点组
  - { name: ♻️🌏 其他自动, <<: *url_test_common2, exclude-filter: 
    "港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|KR|Korea|KOR|首尔|韩|韓|台|新北|彰化|TW|Taiwan|新加坡|坡|狮城|SG|Singapore|
     美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|加拿大|多伦多|温哥华|蒙特利尔|CA|Canada|
     英国|伦敦|UK|United Kingdom|Britain|England|德国|法兰克福|慕尼黑|柏林|DE|Germany|法国|巴黎|FR|France|荷兰|阿姆斯特丹|NL|Netherlands|俄罗斯|莫斯科|圣彼得堡|RU|Russia|
     澳大利亚|悉尼|墨尔本|AU|Australia|
     (VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: ♻️ 非香港自动, <<: *url_test_common2, exclude-filter: "港|HK|hk|Hong Kong|HongKong|hongkong|(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: ♻️ 非日韩自动, <<: *url_test_common2, exclude-filter: "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|KR|Korea|KOR|首尔|韩|韓|(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: ♻️ CF自动, <<: *url_test_common1,filter: "(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)", exclude-filter: "^(..1) .*? (Domain)" }


  - { name: 🔯 故障转移, <<: *fallback_common1, exclude-filter: "(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  # 大洲节点组
  - { name: 🔯🌏 亚洲故转, <<: *fallback_common1, filter: "港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|KR|Korea|KOR|首尔|韩|韓|台|新北|彰化|TW|Taiwan|新加坡|坡|狮城|SG|Singapore" }
  # 国家节点组
  - { name: 🔯🇭🇰 HK, <<: *fallback_common2, filter: "港|HK|hk|Hong Kong|HongKong|hongkong" }
  - { name: 🔯🇯🇵 JP, <<: *fallback_common2, filter: "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan" }
  - { name: 🔯🇰🇷 KR, <<: *fallback_common2, filter: "KR|Korea|KOR|首尔|韩|韓" }
  - { name: 🔯🇹🇼 TW, <<: *fallback_common2, filter: "台|新北|彰化|TW|Taiwan" }
  - { name: 🔯🇸🇬 SG, <<: *fallback_common2, filter: "新加坡|坡|狮城|SG|Singapore" }
  # 大洲节点组
  - { name: 🔯🌎 北美洲故转, <<: *fallback_common1, filter: "美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|加拿大|多伦多|温哥华|蒙特利尔|CA|Canada" }
  # 国家节点组
  # - { name: 🔯🇺🇲 US, <<: *fallback_common2, filter: "美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States" }
  # - { name: 🔯🇨🇦 CA, <<: *fallback_common2, filter: "加拿大|多伦多|温哥华|蒙特利尔|CA|Canada" }
  # 大洲节点组
  - { name: 🔯🌍 欧洲故转, <<: *fallback_common1, filter: "英国|伦敦|UK|United Kingdom|Britain|England|德国|法兰克福|慕尼黑|柏林|DE|Germany|法国|巴黎|FR|France|荷兰|阿姆斯特丹|NL|Netherlands|俄罗斯|莫斯科|圣彼得堡|RU|Russia" }
  # 国家节点组
  # - { name: 🔯🇬🇧 UK, <<: *fallback_common2, filter: "英国|伦敦|UK|United Kingdom|Britain|England" }
  # - { name: 🔯🇩🇪 DE, <<: *fallback_common2, filter: "德国|法兰克福|慕尼黑|柏林|DE|Germany" }
  # - { name: 🔯🇫🇷 FR, <<: *fallback_common2, filter: "法国|巴黎|FR|France" }
  # - { name: 🔯🇳🇱 NL, <<: *fallback_common2, filter: "荷兰|阿姆斯特丹|NL|Netherlands" }
  # - { name: 🔯🇷🇺 RU, <<: *fallback_common2, filter: "俄罗斯|莫斯科|圣彼得堡|RU|Russia" }
  - { name: 🔯🌏 大洋洲故转, <<: *fallback_common1, filter: "澳大利亚|悉尼|墨尔本|AU|Australia" }
  # 国家节点组
  # - { name: 🔯🇦🇺 AU, <<: *fallback_common2, filter: "澳大利亚|悉尼|墨尔本|AU|Australia" }
  # 其他节点组
  - { name: 🔯🌏 其他故转, <<: *fallback_common2, exclude-filter: 
    "港|HK|hk|Hong Kong|HongKong|hongkong|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|KR|Korea|KOR|首尔|韩|韓|台|新北|彰化|TW|Taiwan|新加坡|坡|狮城|SG|Singapore|
     美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|加拿大|多伦多|温哥华|蒙特利尔|CA|Canada|
     英国|伦敦|UK|United Kingdom|Britain|England|德国|法兰克福|慕尼黑|柏林|DE|Germany|法国|巴黎|FR|France|荷兰|阿姆斯特丹|NL|Netherlands|俄罗斯|莫斯科|圣彼得堡|RU|Russia|
     澳大利亚|悉尼|墨尔本|AU|Australia|
     (VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: 🔯 非香港故转, <<: *fallback_common2, exclude-filter: "港|HK|hk|Hong Kong|HongKong|hongkong|(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: 🔯 非日韩故转, <<: *fallback_common2, exclude-filter: "日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan|KR|Korea|KOR|首尔|韩|韓|(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: 🔯 CF故转, <<: *fallback_common1,filter: "(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)", exclude-filter: "^(..1) .*? (Domain)" }


  - { name: 🔮 负载均衡, <<: *load-balance, exclude-filter: "(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)" }
  - { name: 🔮 CF均衡, <<: *load-balance, filter: "(VLESS|Trojan) .*? (Domain|IPv4|IPv6|Clean IP)", exclude-filter: "^(..1) .*? (Domain)" }


# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - RULE-SET ,private_ip ,DIRECT
  - RULE-SET ,category-ads-all ,🛑 广告拦截
  
  - RULE-SET ,youtube_domain ,📹 YouTube
  - RULE-SET ,tiktok_domain ,🎵 TikTok
  - RULE-SET ,ai_domain ,🤖 AI
  - RULE-SET ,18comic_domain ,📚 18comic
  - RULE-SET ,cloudflare_domain ,☁ Cloudflare
  
  - RULE-SET ,gfw_domain ,🚀 默认代理
  - RULE-SET ,geolocation-cn ,🎯 国内流量
  - RULE-SET ,cn_ip ,🎯 国内流量
  - MATCH ,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 604800, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 604800, behavior: domain, format: mrs}
  class: &class {type: http, interval: 604800, behavior: classical, format: text}
rule-providers: 
  category-ads-all: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.mrs"}
  
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  ai_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  18comic_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/18comic.mrs"}
  cloudflare_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cloudflare.mrs"}
  
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"} #49kb
  #geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"} #217kb
  geolocation-cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-cn.mrs"} #37kb
  #cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"} #557kb

  
  private_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"} #83kb

  
  
  
  #https://wiki.metacubex.one/
  #https://clash.wiki/
  #https://www.youtube.com/watch?v=eUqf3lOhFSw&t=14s
  #https://clash-meta.gitbook.io/clash.meta-wiki-older/function/rule/geo
  #https://github.com/MetaCubeX/meta-rules-dat/tree/meta
  #https://github.com/ACL4SSR/ACL4SSR/tree/master
